var _user$project$CounterPair$isCounterForId = F2(
	function (id, _p0) {
		var _p1 = _p0;
		var _p2 = _p1._0;
		return _elm_lang$core$Native_Utils.eq(_p2, _p2);
	});
var _user$project$CounterPair$update = F2(
	function (msg, model) {
		var _p3 = msg;
		switch (_p3.ctor) {
			case 'Insert':
				var newCounter = {
					ctor: '_Tuple2',
					_0: model.nextId,
					_1: _user$project$Counter$init(0)
				};
				var newCounters = A2(
					_elm_lang$core$Basics_ops['++'],
					model.counters,
					_elm_lang$core$Native_List.fromArray(
						[newCounter]));
				return _elm_lang$core$Native_Utils.update(
					model,
					{counters: newCounters, nextId: model.nextId + 1});
			case 'Remove':
				var filteredCounters = A2(
					_elm_lang$core$List$filter,
					_user$project$CounterPair$isCounterForId(_p3._0),
					model.counters);
				return _elm_lang$core$Native_Utils.update(
					model,
					{counters: filteredCounters});
			default:
				var updateCounter = function (_p4) {
					var _p5 = _p4;
					var _p7 = _p5._0;
					var _p6 = _p5._1;
					return _elm_lang$core$Native_Utils.eq(_p7, _p3._0) ? {
						ctor: '_Tuple2',
						_0: _p7,
						_1: A2(_user$project$Counter$update, _p3._1, _p6)
					} : {ctor: '_Tuple2', _0: _p7, _1: _p6};
				};
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						counters: A2(_elm_lang$core$List$map, updateCounter, model.counters)
					});
		}
	});
var _user$project$CounterPair$init = {
	counters: _elm_lang$core$Native_List.fromArray(
		[]),
	nextId: 0
};
var _user$project$CounterPair$Model = F2(
	function (a, b) {
		return {counters: a, nextId: b};
	});
var _user$project$CounterPair$Update = F2(
	function (a, b) {
		return {ctor: 'Update', _0: a, _1: b};
	});
var _user$project$CounterPair$Remove = function (a) {
	return {ctor: 'Remove', _0: a};
};
var _user$project$CounterPair$Insert = {ctor: 'Insert'};
var _user$project$CounterPair$view = function (model) {
	var counters = A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[]));
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				counters,
				A2(
				_elm_lang$html$Html$button,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Events$onClick(_user$project$CounterPair$Insert)
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Add new counter')
					]))
			]));
};
var _user$project$CounterPair$main = {
	main: _elm_lang$html$Html_App$beginnerProgram(
		{model: _user$project$CounterPair$init, view: _user$project$CounterPair$view, update: _user$project$CounterPair$update})
};
